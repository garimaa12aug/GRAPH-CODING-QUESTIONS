bool allassigned(vector<vector<int> > &matrix,int R,int C)
{
    for(int i=0;i<R;i++)
    {
        for(int j=0;j<C;j++)
        {
            if(matrix[i][j] == 1)
            return 0;
        }
    }
    return 1;
}

int rotOranges(vector<vector<int> > &matrix, int R, int C)
{

    queue<pair<int,pair<int,int>>>q;
    int ans =0;
    for(int i=0;i<R;i++)
    {
        for(int j=0;j<C;j++)
        {
            if(matrix[i][j] ==2)
            q.push({0,{i,j}});
        }
    }
    
    while(!q.empty())
    {
        int x = q.front().second.first;
        int y = q.front().second.second;
        int z = q.front().first;
        q.pop();
        ans = max(ans,z);
        
        if(x+1 <R && matrix[x+1][y] ==1)
        {
            matrix[x+1][y] =2;
            q.push({z+1,{x+1,y}});
        }
        
        if(x-1 >=0 && matrix[x-1][y] == 1)
        {
            matrix[x-1][y] =2;
            q.push({z+1,{x-1,y}});
        }
        
        if(y+1 <C && matrix[x][y+1] ==1)
        {
            matrix[x][y+1] =2;
            q.push({z+1,{x,y+1}});
        }
        if(y-1 >=0 && matrix[x][y-1] ==1)
        {
            matrix[x][y-1] =2;
            q.push({z+1,{x,y-1}});
        }
        
    }
    
    if(allassigned(matrix,R,C))
    return ans;
    else
    return -1;
}
